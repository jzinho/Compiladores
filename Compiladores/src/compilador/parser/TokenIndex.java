/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.parser;

import compilador.node.*;
import compilador.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTInput(@SuppressWarnings("unused") TInput node)
    {
        this.index = 0;
    }

    @Override
    public void caseTOutput(@SuppressWarnings("unused") TOutput node)
    {
        this.index = 1;
    }

    @Override
    public void caseTString(@SuppressWarnings("unused") TString node)
    {
        this.index = 2;
    }

    @Override
    public void caseTInt(@SuppressWarnings("unused") TInt node)
    {
        this.index = 3;
    }

    @Override
    public void caseTIf(@SuppressWarnings("unused") TIf node)
    {
        this.index = 4;
    }

    @Override
    public void caseTElse(@SuppressWarnings("unused") TElse node)
    {
        this.index = 5;
    }

    @Override
    public void caseTReturn(@SuppressWarnings("unused") TReturn node)
    {
        this.index = 6;
    }

    @Override
    public void caseTVoid(@SuppressWarnings("unused") TVoid node)
    {
        this.index = 7;
    }

    @Override
    public void caseTWhile(@SuppressWarnings("unused") TWhile node)
    {
        this.index = 8;
    }

    @Override
    public void caseTOpenBrace(@SuppressWarnings("unused") TOpenBrace node)
    {
        this.index = 9;
    }

    @Override
    public void caseTCloseBrace(@SuppressWarnings("unused") TCloseBrace node)
    {
        this.index = 10;
    }

    @Override
    public void caseTLsbrack(@SuppressWarnings("unused") TLsbrack node)
    {
        this.index = 11;
    }

    @Override
    public void caseTRsbrack(@SuppressWarnings("unused") TRsbrack node)
    {
        this.index = 12;
    }

    @Override
    public void caseTLpar(@SuppressWarnings("unused") TLpar node)
    {
        this.index = 13;
    }

    @Override
    public void caseTRpar(@SuppressWarnings("unused") TRpar node)
    {
        this.index = 14;
    }

    @Override
    public void caseTComma(@SuppressWarnings("unused") TComma node)
    {
        this.index = 15;
    }

    @Override
    public void caseTScolon(@SuppressWarnings("unused") TScolon node)
    {
        this.index = 16;
    }

    @Override
    public void caseTAtrib(@SuppressWarnings("unused") TAtrib node)
    {
        this.index = 17;
    }

    @Override
    public void caseTColon(@SuppressWarnings("unused") TColon node)
    {
        this.index = 18;
    }

    @Override
    public void caseTDiv(@SuppressWarnings("unused") TDiv node)
    {
        this.index = 19;
    }

    @Override
    public void caseTPlus(@SuppressWarnings("unused") TPlus node)
    {
        this.index = 20;
    }

    @Override
    public void caseTMinus(@SuppressWarnings("unused") TMinus node)
    {
        this.index = 21;
    }

    @Override
    public void caseTTimes(@SuppressWarnings("unused") TTimes node)
    {
        this.index = 22;
    }

    @Override
    public void caseTMod(@SuppressWarnings("unused") TMod node)
    {
        this.index = 23;
    }

    @Override
    public void caseTGreater(@SuppressWarnings("unused") TGreater node)
    {
        this.index = 24;
    }

    @Override
    public void caseTLess(@SuppressWarnings("unused") TLess node)
    {
        this.index = 25;
    }

    @Override
    public void caseTGequal(@SuppressWarnings("unused") TGequal node)
    {
        this.index = 26;
    }

    @Override
    public void caseTLequal(@SuppressWarnings("unused") TLequal node)
    {
        this.index = 27;
    }

    @Override
    public void caseTNot(@SuppressWarnings("unused") TNot node)
    {
        this.index = 28;
    }

    @Override
    public void caseTAnd(@SuppressWarnings("unused") TAnd node)
    {
        this.index = 29;
    }

    @Override
    public void caseTOr(@SuppressWarnings("unused") TOr node)
    {
        this.index = 30;
    }

    @Override
    public void caseTXor(@SuppressWarnings("unused") TXor node)
    {
        this.index = 31;
    }

    @Override
    public void caseTDiff(@SuppressWarnings("unused") TDiff node)
    {
        this.index = 32;
    }

    @Override
    public void caseTEqual(@SuppressWarnings("unused") TEqual node)
    {
        this.index = 33;
    }

    @Override
    public void caseTEqualequal(@SuppressWarnings("unused") TEqualequal node)
    {
        this.index = 34;
    }

    @Override
    public void caseTMain(@SuppressWarnings("unused") TMain node)
    {
        this.index = 35;
    }

    @Override
    public void caseTId(@SuppressWarnings("unused") TId node)
    {
        this.index = 36;
    }

    @Override
    public void caseTNum(@SuppressWarnings("unused") TNum node)
    {
        this.index = 37;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 38;
    }
}
